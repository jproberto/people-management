# ==========================================
# DOCKER PROFILE CONFIGURATION
# ==========================================

# ========== SERVER ==========
server.port=8080
server.servlet.context-path=/

# ========== DATABASE ==========
spring.datasource.url=jdbc:postgresql://postgres:5432/people_management
spring.datasource.username=people_admin
spring.datasource.password=people_password_2024
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000

# ========== JPA/HIBERNATE ==========
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# ========== FLYWAY ==========
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.sql-migration-suffixes=.sql

# ========== KAFKA ==========
spring.kafka.bootstrap-servers=kafka:29092

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.delivery.timeout.ms=30000

# Consumer
spring.kafka.consumer.group-id=people-management-docker
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# ========== LOGGING ==========
logging.level.com.itau.hr.people_management=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.org.postgresql=WARN
logging.level.org.apache.kafka=WARN

# Log file configuration
logging.file.name=/app/logs/people-management.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# ========== ACTUATOR/MANAGEMENT ==========
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# ========== SECURITY ==========
# Disable security for internal Docker network (configure properly for production)
management.security.enabled=false

# ========== INTERNATIONAL ==========
spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.messages.cache-duration=3600

# ========== JSON ==========
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false